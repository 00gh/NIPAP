language: python
python:
  - 2.7

env:
    global:
        - "ARTIFACTS_AWS_REGION=eu-west-1"
        - "ARTIFACTS_S3_BUCKET=nipap"
        # ARTIFACTS_AWS_SECRET_ACCESS_KEY
        - secure: "IdV13kwWXV/sgF1xbvNjZjha5e0yJ6WTiU+LFatQo3SHR4iRvlRrxk9HYANT\nwYCpqJ5T01w7mBhqiNRRlRFYtxwrsQfLC6sPyV8USaAVDeBUkXkGNJ1BU+oh\noM4V8c/qHxy7TvA/+mQ69ORCH9yFVtC8EInL71JcuPuAzR20H80="
        # ARTIFACTS_AWS_ACCESS_KEY_ID
        - secure: "lxO7SGOLlMu4AldVb0XNViRAPhanleCeIH5BmrhKRMm1k7YnU0WGmfR+1X+m\n7PYI+011vHyVvC/ofbgbbBgqvmbec103ozrrbMCWPm27OCcfjyYJJJtcMLIe\nnD7cQC3u9F0ASxvBBmKIFIKwWPtzDSs4dq3RNfBXkGQc8RsEk1Y="
    matrix:
        # basic build only running nosetests
        - "PYLINT=false PERFTEST=false"
        # build nosetest and then pylint with artifact upload to S3
        - "PYLINT=true PERFTEST=true"

virtualenv:
    system_site_packages: true

before_script:
    # script for uploading build artifacts to Amazon S3
    - "if [[ $PYLINT == true ]]; then travis_retry gem install travis-artifacts; fi"
    # install pylint
    - "if [[ $PYLINT == true ]]; then sudo apt-get install -qq -y --force-yes pylint; fi"


install:
    # we use our debian repo to get ip4r
    - echo "deb http://spritelink.github.io/NIPAP/repos/apt stable main extra" | sudo tee /etc/apt/sources.list.d/nipap.list
    - sudo apt-get update -qq
    # install dependencies for building packages and build debian packages
    - sudo apt-get install -qq -y --force-yes devscripts python-docutils
    - make builddeb
    # install dependencies for installing & running nipap
    - sudo apt-get install -qq -y --force-yes python-pysqlite2 python-psycopg2 python-ipy python-ldap python-docutils postgresql postgresql-9.1-ip4r python-tornado python-flask python-flask-xml-rpc python-flask-compress
    # install the newly built nipap packages
    - sudo dpkg -i nipap*.deb python-pynipap*.deb
    # populate answers to nipapd package install questions and reconfigure
    - echo "set nipapd/autoconf true" | sudo debconf-communicate
    - echo "set nipapd/startup true" | sudo debconf-communicate
    # reconfigure to do bootstrapping of db and stuff
    - sudo dpkg-reconfigure nipapd
    # create local user for unittests
    - sudo nipap/nipap-passwd -f /etc/nipap/local_auth.db -a unittest -p gottatest -n "User for running unit tests"
    - sudo nipap/nipap-passwd -f /etc/nipap/local_auth.db -a readonly -p gottatest --readonly -n "Read-only user for running unit tests"
    - sudo /etc/init.d/nipapd restart
    - cp nipap-cli/nipaprc ~/.nipaprc
    - sed -i -e 's/username = guest/username = unittest/' -e 's/password = guest/password = gottatest/' ~/.nipaprc

script:
    - cd tests
    - nosetests xmlrpc.py
    - nosetests nipaptest.py
    - nosetests test_cli.py
    - nosetests nipap-ro.py
    # pylint
    - cd ..
    - "if [[ $PYLINT == true ]]; then mkdir pylint; fi"
    - "if [[ $PYLINT == true ]]; then (echo -n 'timestamp: '; date '+%s'; pylint nipap/nipapd nipap/nipap/*.py) > pylint/nipap || true; fi"
    - "if [[ $PYLINT == true ]]; then (echo -n 'timestamp: '; date '+%s'; pylint pynipap/pynipap.py) > pylint/pynipap || true; fi"
    - "if [[ $PYLINT == true ]]; then (echo -n 'timestamp: '; date '+%s'; pylint nipap-cli/nipap nipap-cli/nipap_cli/*.py) > pylint/nipap-cli || true; fi"

after_success:
    - if [[ ${TRAVIS_SECURE_ENV_VARS} == true && ${TRAVIS_BRANCH} == master && ${PYLINT} == true ]]; then travis-artifacts upload --path pylint/nipap --path pylint/pynipap --path pylint/nipap-cli --target-path artifacts/pylint/$TRAVIS_BUILD_NUMBER/; fi

notifications:
    irc:
        channels:
            - secure: "VejFQYDTUqrVzo+eHKf9BTWema2LHxdloPAgAbPjFF6W3n3ASbJwuXle2tg6\nr7ZavweLoTnV5LsPT6aCBO4I7ZT90O9SqhcVdZH6wzFkiW/f0HQs8VaEH/ch\nHiAjueMHalUEMdHYNJuKvoJzfG/3MPWuPdxP/Nb3rJYikJea9aE="
        skip_join: true
