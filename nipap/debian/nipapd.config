#!/bin/sh

# the nipapd package is not unpacked at this stage, so this script needs to
# know about the current version of the database
CURRENT_DB_VERSION=%CDV

# to debug / develop
# export DEBCONF_DEBUG=developer
# export DEBIAN_PRIORITY=low
#
# to empty all answered questions from debconf db:
# if the script is run standalone, stuff ends up in package "unknown"
#   echo PURGE | debconf-communicate unknown
# if it's properly run from dpkg-configure or so, it should up under the package name
#   echo PURGE | debconf-communicate nipapd

# Source debconf library.
. /usr/share/debconf/confmodule

# TODO: will postgresql always be running when this script is run? what happens
#		if was installed as a dependancy of nipapd, will it already have been
#		configured or not?

POSTGRES_INSTALLED=0
NIPAP_DB_EXISTS=0
NIPAP_DB_VERSION=0

# determine if postgres is installed
su postgres -c 'psql --version' > /dev/null 2>&1
if [ $? -eq 0 ]; then
	POSTGRES_INSTALLED=1

	# does the NIPAP database exist?
	if [ "`su postgres -c "psql -c '\l+'" | awk -F"|" '{ if ($1~/^ *nipap *$/) { gsub(/^ */, "", $1); gsub(/ *$/, "", $1); print $1 } }'`" = "nipap" ]; then
		NIPAP_DB_EXISTS=1

		# figure out version of db
		DB_COMMENT=`su postgres -c "psql -c '\l+'" | awk -F"|" '{ if ($1~/^ *nipap *$/) { print $9 } }'`
		echo "$DB_COMMENT" | grep "schema version: [0-9]\+$" > /dev/null 2>&1
		if [ $? -eq 0 ]; then
			# seems to be a DB comment with proper version
			NIPAP_DB_VERSION=`echo $DB_COMMENT | sed 's/.*schema version: //'`
		fi
	fi
fi


# TODO: see above TODO regarding state of postgresql installation. Since nipapd
#		depends on postgresql, can we assume that it will be there once preinst
#		is being run? If so, if postgresql is not installed at all, we can
#		still ask about if the user wants to automatically setup the db for
#		NIPAP as we know postgresql will be installed when nipapd.preinst is
#		run.

if [ $NIPAP_DB_EXISTS -eq 0 ]; then
	# NIPAP DB does not exist, ask to setup
	db_input high nipapd/autoconf || true
	db_go

else
	# NIPAP DB exists, does it have a version number?
	if [ $NIPAP_DB_VERSION -gt 0 ]; then

		# is it the current version or not?
		if [ $NIPAP_DB_VERSION -ne $CURRENT_DB_VERSION ]; then
			# it's not the current version - let's see if the user wants to upgrade!

			# if user has upgraded from version X to Y in the past and been
			# asked question of whether to automatically upgrade, the answer
			# will be cached. Since this is a new upgrade, we should ask again,
			# thus clear the old answer first.
			db_reset nipapd/upgrade
			db_input high nipapd/upgrade || true
			db_go
		fi
	fi
fi

# should nipapd be started on system boot?
db_input high nipapd/startup || true
db_go
