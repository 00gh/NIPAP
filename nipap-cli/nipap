#! /usr/bin/python
""" NIPAP shell command

    A shell command to interact with NIPAP.
"""

import logging
import sys

import nipap_cli
import nipap_cli.nipap_cli
from nipap_cli.command import Command, CommandError
from pynipap import NipapError



class NullHandler(logging.Handler):
    """ A NULL logging handler

        Discards all log messages passed to it.
    """

    def emit(self, record):
        pass



if __name__ == '__main__':
    logger = logging.getLogger()
    nullh = NullHandler()
    logger.addHandler(nullh)

    import optparse
    parser = optparse.OptionParser()
    parser.add_option("--version", action="store_true", help="display version information and exit")

    (options, args) = parser.parse_args()

    if options.version:
        import pynipap
        print "nipap CLI client version:", nipap_cli.__version__
        print "pynipap version", pynipap.__version__
        sys.exit(0)

    try:
        cmd = Command(nipap_cli.nipap_cli.cmds, sys.argv[1::])
    except (ValueError, CommandError, NipapError) as exc:
        print >> sys.stderr, "Error: %s" % str(exc)
        sys.exit(1)

    # execute command
    if cmd.exe is None:
        print "Incomplete command specified"
        print "valid completions: %s" % " ".join(cmd.next_values())
        sys.exit(1)

    try:
        cmd.exe(cmd.arg, cmd.exe_options)
    except KeyboardInterrupt:
        sys.exit(130)
    except (IOError, OSError):
        sys.exit(141)
    except NipapError as exc:
        print >> sys.stderr, "Command failed:\n  %s" % str(exc)
        sys.exit(1)

